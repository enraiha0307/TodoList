{"ast":null,"code":"var _jsxFileName = \"/home/akku/Documents/react/todolist/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css'; //Importing Components\n\nimport TodoList from './components/TodoList';\nimport Form from './components/Form';\n\nfunction App() {\n  //state..\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]); //functions...\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n\n      default:\n        setFilteredTodos(todos);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Akku's To-Do List \")), /*#__PURE__*/React.createElement(Form, {\n    inputText: inputText,\n    todos: todos,\n    setTodos: setTodos,\n    s: true,\n    etInputText: setInputText,\n    setStatus: setStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    setTodos: setTodos,\n    todos: todos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/akku/Documents/react/todolist/src/App.js"],"names":["React","useState","TodoList","Form","App","inputText","setInputText","todos","setTodos","status","setStatus","filteredTodos","setFilteredTodos","filterHandler","filter","todo","completed"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,SAASC,GAAT,GAAe;AACf;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD,CALe,CAOf;;AACA,QAAMY,aAAa,GAAG,MAAK;AACzB,YAAOJ,MAAP;AACE,WAAK,WAAL;AAAkBG,QAAAA,gBAAgB,CAACL,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,IAAxC,CAAD,CAAhB;AAClB;;AACA,WAAK,aAAL;AAAmBJ,QAAAA,gBAAgB,CAACL,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,KAAxC,CAAD,CAAhB;AACnB;;AACA;AACEJ,QAAAA,gBAAgB,CAACL,KAAD,CAAhB;AANJ;AAQD,GATD;;AAWE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,CADF,eAIC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEF,SAAjB;AACA,IAAA,KAAK,EAAIE,KADT;AAEA,IAAA,QAAQ,EAAIC,QAFZ;AAEsB,IAAA,CAAC,MAFvB;AAGA,IAAA,WAAW,EAAEF,YAHb;AAIA,IAAA,SAAS,EAAII,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,eAUC,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEF,QAApB;AAA8B,IAAA,KAAK,EAAED,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVD,CADF;AAcD;;AAED,eAAeH,GAAf","sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\n//Importing Components\nimport TodoList from './components/TodoList';\nimport Form from './components/Form';\n\nfunction App() {\n//state..\nconst [inputText, setInputText] = useState('');\nconst [todos, setTodos] = useState([]);\nconst [status, setStatus] = useState('all');\nconst [filteredTodos, setFilteredTodos] = useState([]);\n\n//functions...\nconst filterHandler = () =>{\n  switch(status){\n    case 'completed': setFilteredTodos(todos.filter(todo => todo.completed === true));\n    break;\n    case 'uncompleted':setFilteredTodos(todos.filter(todo => todo.completed === false));\n    break;\n    default:\n      setFilteredTodos(todos);\n  }\n}\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>Akku's To-Do List </h1>\n      </header>\n     <Form inputText={inputText} \n     todos = {todos} \n     setTodos = {setTodos} s\n     etInputText={setInputText}\n     setStatus = {setStatus} />\n\n     <TodoList setTodos={setTodos} todos={todos}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}